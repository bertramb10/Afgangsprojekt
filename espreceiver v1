#include <Arduino.h>
#include <WiFi.h>
#include <esp_now.h>
#include <PubSubClient.h>
#include <ArduinoJson.h>

/* --- Net --- */
const char* MQTT_HOST = "HOST_IP";
const char* WIFI_SSID = "WIFISSID";
const char* WIFI_PW   = "WIFIPASS";

/* --- Net 2 --- */
//const char* MQTT_HOST = "HOST_IP";
//const char* WIFI_SSID = "WIFISSID";
//const char* WIFI_PW   = "WIFIPASS";

WiFiClient spine;
PubSubClient mqtt(spine);

/* --- Payload --- */
struct Payload { char id[10]; float temp; float cells[10]; };

void publishToMqtt(const Payload& p) {
  StaticJsonDocument<256> doc;
  doc["id"] = p.id;
  doc["temp"] = p.temp;
  JsonArray c = doc.createNestedArray("cells");
  for (float v : p.cells) c.add(v);

  char buf[256];
  size_t n = serializeJson(doc, buf);

  if (!mqtt.connected()) {
    Serial.println("üîå MQTT disconnected ‚Äì reconnecting...");
    mqtt.connect("espReceiver");
  }

  mqtt.publish("batteri/telemetry", buf, n);
  Serial.print("üì° MQTT batt-telemetry ‚Üí ");
  Serial.println(buf);
}

void onReceive(const uint8_t* mac, const uint8_t* data, int len) {
  Serial.printf("üì¶ ESP-NOW callback! Len=%d\n", len);

  if (len != sizeof(Payload)) {
    Serial.printf("‚ùå Len mismatch! Expected %d, got %d\n", sizeof(Payload), len);
    return;
  }

  Payload p;
  memcpy(&p, data, sizeof(p));
  Serial.printf("‚úÖ Received: ID=%s Temp=%.1f\n", p.id, p.temp);
  publishToMqtt(p);
  }

void setup() {
  Serial.begin(115200);

  // Print Wi-Fi og scan
  Serial.print("MAC: "); Serial.println(WiFi.macAddress());
  Serial.println("üîç Scanning Wi-Fi...");
  int n = WiFi.scanNetworks();
  for (int i = 0; i < n; i++) {
    Serial.printf("  %s (%ddBm)\n", WiFi.SSID(i).c_str(), WiFi.RSSI(i));
  }

  uint8_t senderMac[6] = {0xB0, 0xA7, 0x32, 0xDE, 0x16, 0xB8};

  // Wi-Fi
  WiFi.mode(WIFI_STA);
  Serial.print("üì∂ Connecting to Wi-Fi ");
  WiFi.begin(WIFI_SSID, WIFI_PW);
  while (WiFi.status() != WL_CONNECTED) {
    Serial.print(".");
    delay(500);
  }
  Serial.println(" OK");
  Serial.print("üì° IP: "); Serial.println(WiFi.localIP());

  // MQTT
  mqtt.setServer(MQTT_HOST, 1883);
  mqtt.connect("espReceiver");

  // ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("‚ùå ESP-NOW init failed");
    while (true) delay(1000);
  }
  esp_now_register_recv_cb(onReceive);
  Serial.println("‚úÖ ESP-NOW ready");
}

void loop() {
  mqtt.loop();
}
